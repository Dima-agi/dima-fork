version: '3.8'
services:
  backend:
    volumes:
      - "./:/app"
    build: .
    depends_on:
      - super__redis
      - super__postgres
    networks:
      - super_network
    command:
      [
        "/app/wait-for-it.sh",
        "super__postgres:5432",
        "-t",
        "60",
        "--",
        "/app/entrypoint.sh"
      ]
    ports:
      - 127.0.0.1:8001:8001
    container_name: backend_prod

  celery:
    volumes:
      - "./:/app"
      - "${EXTERNAL_RESOURCE_DIR:-./workspace}:/app/ext"
    build: .
    depends_on:
      - super__redis
      - super__postgres
    networks:
      - super_network
    command: [ "/app/entrypoint_celery.sh" ]
    container_name: celery_prod

  gui:
    build:
      context: ./gui
      dockerfile: DockerfileProd
      args:
        NEXT_PUBLIC_API_BASE_URL: "/api"
    networks:
      - super_network
    ports:
      - 127.0.0.1:3000:3000
    container_name: gui_prod

  super__redis:
    image: "redis/redis-stack-server:latest"
    networks:
      - super_network
    volumes:
      - redis_data:/data
    container_name: redis_prod

  super__postgres:
    image: "docker.io/library/postgres:latest"
    environment:
      - POSTGRES_USER=superagi
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=super_agi_main
    volumes:
      - superagi_postgres_data:/var/lib/postgresql/data/
    networks:
      - super_network
    container_name: postgres_prod

networks:
  super_network:
    driver: bridge
volumes:
  superagi_postgres_data:
  redis_data:
